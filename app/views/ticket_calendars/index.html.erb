<div style="display: flex; flex-wrap: wrap; align-items: center;">
  <select id="view-selector">
    <option value="multiMonthYear">Multi Month Year</option>
    <option value="timeGridWeek">Time Grid Week</option>
    <option value="listDay">List Day</option>
    <option value="listWeek">List Week</option>
    <option value="listMonth">List Month</option>
    <option value="listYear">List Year</option>
    <option value="dayGridMonth">Day Grid Month</option>
    <option value="dayGridWeek">Day Grid Week</option>
    <option value="dayGridDay">Day Grid Day</option>
  </select>
  status
  <% IssueStatus.all.each do |status| %>
    <div style="margin-right: 10px;">
      <%= check_box_tag 'status_ids[]', status.id, (params[:status_ids] || IssueStatus.where(is_closed: false).pluck(:id)).include?(status.id), id: "status_ids_#{status.id}", class: 'status-checkbox' %>
      <%= label_tag "status_ids_#{status.id}", status.name, class: "status_ids" %>
    </div>
  <% end %>
</div>
<!-- モーダルダイアログのHTML -->
<div id="ticketModal" class="modal" style="display:none;">
  <div class="modal-content">
    <span class="close">&times;</span>
    <iframe id="ticketIframe" src="" frameborder="0" style="width: 100%; height: 80vh;"></iframe>
  </div>
</div>
<!-- コンテキストメニューのHTML構造 -->
<div id="contextMenu" class="context-menu" style="display: none; position: absolute; z-index: 1000;">
  <ul class="menu-list">
    <li><a href="#" id="edit-ticket">編集</a></li>
    <li><a href="#" id="edit-status">Close</a></li>
    <li id="progress-menu-item">
      <select id="view-selector">
        <option value="multiMonthYear">Multi Month Year</option>
        <option value="timeGridWeek">Time Grid Week</option>
        <option value="listDay">List Day</option>
        <option value="listWeek">List Week</option>
        <option value="listMonth">List Month</option>
        <option value="listYear">List Year</option>
        <option value="dayGridMonth">Day Grid Month</option>
        <option value="dayGridWeek">Day Grid Week</option>
        <option value="dayGridDay">Day Grid Day</option>
      </select>
    </li>
    <li><a href="#" id="priority">優先度</a></li>
    <li><a href="#" id="category">カテゴリ</a></li>
  </ul>
</div>
<div id='calendar'></div>
<style>
  /* 土曜日の色を青に設定 */
  .fc-day-sat {
      background-color: #CCF;
  }

  /* 日曜日の色を赤に設定 */
  .fc-day-sun {
      background-color: #FCC;
  }
  /* カレンダーセルにホバーした際にカーソルをカスタムカーソルに変更 */
  .fc-daygrid-day:hover {
      cursor: alias;
  }
  /* コンテキストメニューのスタイル */
  .context-menu {
    background-color: white;
    border: 1px solid #ccc;
    padding: 10px;
  }
  .menu-list {
    list-style: none;
    margin: 0;
    padding: 0;
  }
  .menu-list li a {
    display: block;
    padding: 5px 10px;
    text-decoration: none;
    color: black;
  }
  .menu-list li a:hover {
    background-color: #f0f0f0;
  }
  /* モーダルダイアログのCSS */
  .modal {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.4);
    z-index: 1001;
  }

  .modal-content {
    background-color: #fefefe;
    margin: 0 auto;
    padding: 0;
    border: 1px solid #888;
    width: 80%;
  }

  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }

  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }
</style>
<%= javascript_include_tag 'index.global.min.js', plugin: :ticket_calendar %>
<script type="importmap">
  {
    "imports": {
      "timeGrid": "<%= asset_path('/plugin_assets/ticket_calendar/javascripts/packages/timegrid/index.global.min.js') %>",
      "list": "<%= asset_path('/plugin_assets/ticket_calendar/javascripts/packages/list/index.global.min.js') %>",
      "dayGrid": "<%= asset_path('/plugin_assets/ticket_calendar/javascripts/packages/daygrid/index.global.min.js') %>",
      "multiMonth": "<%= asset_path('/plugin_assets/ticket_calendar/javascripts/packages/multimonth/index.global.min.js') %>"
    }
  }
</script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
  var project_id = "<%= @project.id %>";
  var calendarEl = document.getElementById('calendar');

  function fetchEvents(fetchInfo, successCallback, failureCallback) {
    var selectedStatusIds = Array.from(document.querySelectorAll('.status-checkbox:checked')).map(cb => `status_ids[]=${cb.value}`).join('&');

    fetch(`/projects/${project_id}/ticket_calendars?start=${fetchInfo.start.toLocaleDateString()}&end=${fetchInfo.end.toLocaleDateString()}&${selectedStatusIds}`, {
      headers: {
        'Accept': 'application/json'
      }
    })
      .then(response => response.json())
      .then(events => successCallback(events))
      .catch(error => failureCallback(error));
  }

  var calendar = new FullCalendar.Calendar(calendarEl, {
    initialView: 'multiMonthYear',
    timeZone: 'local',
    firstDay: 1,
    events: fetchEvents,
    editable: true,
    eventDrop: function(info) {
      updateTicketDatesHandler(project_id, info);
    },
    eventResizableFromStart: true,
    eventResize: function(info) {
      updateTicketDatesHandler(project_id, info);
    },
    dateClick: function(info) {
      openNewTicketModal(project_id, info, this);
    }
  });

  calendar.render();

  document.querySelectorAll('.status-checkbox').forEach(function(checkbox) {
    checkbox.addEventListener('change', function() {
      calendar.refetchEvents();
    });
  });
  });

  function openContextMenu(project_id, info, calendar) {
  var ticket_id = info.event.id;
  info.jsEvent.preventDefault();
  info.jsEvent.stopPropagation();

  var contextMenu = document.getElementById('contextMenu');
  contextMenu.style.display = 'block';
  contextMenu.style.left = info.jsEvent.pageX + 'px';
  contextMenu.style.top = info.jsEvent.pageY + 'px';

  document.getElementById('edit-ticket').addEventListener('click', function(event) {
    document.getElementById('contextMenu').style.display = 'none';
    openEditTicketModal(project_id, info, calendar);
  });

  document.getElementById('progress-menu-item').addEventListener('click', function(event) {
    event.preventDefault();
  });

  document.addEventListener('click', function(event) {
    if (!event.target.closest('#contextMenu')) {
      document.getElementById('contextMenu').style.display = 'none';
    }
  });
  }

  function openNewTicketModal(project_id, info, calendar) {
  var url = '/issues/new?issue[start_date]=' + info.dateStr;
  openTicketModal(project_id, info, url, calendar);
  }

  function openEditTicketModal(project_id, info, calendar) {
  var ticket_id = info.event.id;
  var url = `/issues/${ticket_id}/edit`;
  openTicketModal(project_id, info, url, calendar);
  }

  function openTicketModal(project_id, info, url, calendar) {
  var modal = document.getElementById('ticketModal');
  var iframe = document.getElementById('ticketIframe');
  var closeBtn = document.querySelector('.close');

  iframe.src = url;
  modal.style.display = 'block';

  iframe.onload = function() {
    const iframeDocument = iframe.contentDocument || iframe.contentWindow.document;
    const menu = iframeDocument.getElementById('top-menu');
    if (menu) {
      menu.style.display = 'none';
    }
    const header = iframeDocument.getElementById('header');
    if (header) {
      header.style.display = 'none';
    }
    const footer = iframeDocument.getElementById('footer');
    if (footer) {
      footer.style.display = 'none';
    }
  };

  closeBtn.onclick = function() {
    modal.style.display = 'none';
    calendar.refetchEvents();
  };

  window.onclick = function(event) {
    if (event.target == modal) {
      modal.style.display = 'none';
      calendar.refetchEvents();
    }
  };
  }

  function updateTicketDatesHandler(project_id, info) {
  var ticket_id = info.event.id;
  var newStartDate = info.event.start;
  var newEndDate = info.event.end ? info.event.end : newStartDate;

  updateTicketDates(project_id, ticket_id, newStartDate, newEndDate);
  }

  function addDay(date, days) {
  return new Date(date.getTime() + (1000 * 60 * 60 * 24) * days);
  }

  function updateTicketDates(project_id, ticket_id, start_date, end_date) {
  fetch(`/projects/${project_id}/ticket_calendars/${ticket_id}/update_dates`, {
    method: 'PUT',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
    },
    body: JSON.stringify({ start_date: start_date.toLocaleDateString(), end_date: end_date.toLocaleDateString() })
  }).then(response => {
    if (!response.ok) {
      alert('Failed to update ticket dates.');
    }
  });
  }

  function updateTicketProgress(project_id, ticket_id, progress) {
  fetch(`/projects/${project_id}/ticket_calendars/${ticket_id}/update_done_ratio`, {
    method: 'PUT',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
    },
    body: JSON.stringify({ done_ratio: progress })
  }).then(response => {
    if (!response.ok) {
      alert('Failed to update ticket done ratio.');
    }
  });
  }
</script>
